version: "3.9"

networks:
  dtaskbot-net:
    external: true

services:
  rabbitmq:
    image: rabbitmq
    restart: always
    networks: [dtaskbot-net]
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  db:
    image: postgres:16.4
    command: postgres -c config_file=/etc/postgresql.conf
    restart: always
    networks: [dtaskbot-net]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/config/custom_pg_hba.conf:/etc/postgres/pg_hba.conf
      - ./backend/config/custom_postgresql.conf:/etc/postgresql.conf
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: "bot"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d bot -h 127.0.0.1"]
      interval: 10s
      timeout: 3s
      retries: 15

  adminer:
    image: adminer
    restart: always
    networks: [dtaskbot-net]
    depends_on:
      - db
    environment:
      - ADMINER_DEFAULT_SERVER=db
    ports:
      - "8080:8080"

  backup:
    build:
      context: ./backup
      args:
        - POSTGRES_VERSION=16
    restart: always
    networks: [dtaskbot-net]
    environment:
      SCHEDULE: '@hourly'
      BACKUP_KEEP_DAYS: 14
      S3_ENDPOINT: https://storage.clo.ru/
      S3_REGION: eu-north-1
      S3_ACCESS_KEY_ID: ${S3_BACKUPS_ACCESSKEY}
      S3_SECRET_ACCESS_KEY: ${S3_BACKUPS_SECRETKEY}
      S3_BUCKET: apps3tablecrm-default-bucket
      S3_PREFIX: backups/dtaskbot
      POSTGRES_HOST: db
      POSTGRES_DATABASE: bot
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      BACKUP_ALERT_PROJECT_NAME: ${BACKUP_ALERT_PROJECT_NAME}
      BACKUP_ALERT_BOT_TOKEN: ${BACKUP_ALERT_BOT_TOKEN}
      BACKUP_ALERT_CHAT_ID: ${BACKUP_ALERT_CHAT_ID}
      PGDUMP_EXTRA_OPTS: '--exclude-table-data=events'

volumes:
  pgdata:
    external: true
    name: dtaskbot_pgdata
