"""empty message

Revision ID: 11b645223cfe
Revises: e94d07276d9e
Create Date: 2024-01-24 19:04:55.810807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '11b645223cfe'
down_revision: Union[str, None] = 'e94d07276d9e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('context', sa.Enum('OFFER', 'TASK', name='messagecontexttype'), nullable=True),
    sa.Column('source', sa.Enum('WINDOWSCLIENT', 'BOT', 'WEB', name='messagesourcetype'), nullable=True),
    sa.Column('type', sa.Enum('ACCEPTOFFER', 'STARTWORK', 'SUBMITWORK', 'WORKACCEPTED', 'DEADLINESPENT', 'AUTOSCREENS', 'MESSAGE', name='messagetype'), nullable=True),
    sa.Column('offer_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('task_event_files')
    op.drop_table('task_events')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_events',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('task_events_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_type', postgresql.ENUM('ACCEPTOFFER', 'STARTWORK', 'SUBMITWORK', 'DEADLINESPENT', 'AUTOSCREENS', 'MESSAGE', 'WORKACCEPTED', name='taskeventtype'), autoincrement=False, nullable=True),
    sa.Column('source_type', postgresql.ENUM('WINDOWSCLIENT', 'BOT', 'WEB', name='taskeventsourcetype'), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_delivered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tg_delivered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='task_events_author_id_fkey'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_events_task_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_events_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('task_event_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bucket_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('task_event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_uploaded', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_event_id'], ['task_events.id'], name='task_event_files_task_event_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_event_files_pkey')
    )
    op.drop_table('messages')
    # ### end Alembic commands ###
