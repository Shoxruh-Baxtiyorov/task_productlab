services:
  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    image: postgres:16.4
    command: postgres -c config_file=/etc/postgresql.conf
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/config/custom_pg_hba.conf:/etc/postgres/pg_hba.conf
      - ./backend/config/custom_postgresql.conf:/etc/postgresql.conf
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: "bot"

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DEFAULT_SERVER=db
    ports:
      - "8080:8080"

  backend:
    &backend
    build: ./backend
    restart: always
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      TOKEN: ${TOKEN}
      RABBIT_HOST: ${RABBIT_HOST}
      URL: ${URL}
      ADMINS: ${ADMINS}
      SUPPORT: ${SUPPORT}
      BOT_ADDRESS: ${BOT_ADDRESS}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_KEY_ID: ${S3_KEY_ID}
      REQUIRED_CHANNEL_ID: ${REQUIRED_CHANNEL_ID}
      REQUIRED_CHANNEL_USERNAME: ${REQUIRED_CHANNEL_USERNAME}
    depends_on:
      - db

  new_task_consumer:
    &consumer
    build: ./backend
    restart: on-failure
    command: bash -c "ls && python3.11 distributors/new_task/main.py"
    volumes:
      - ./backend:/backend
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      TOKEN: ${TOKEN}
      URL: ${URL}
      BOT_ADDRESS: ${BOT_ADDRESS}
      RABBIT_HOST: ${RABBIT_HOST}
      ADMINS: ${ADMINS}

  massive_messaging_consumer:
    <<: *consumer
    command: python3.11 distributors/massive_messaging/main.py

  freelancer_task_consumer:
    <<: *consumer
    command: python3.11 distributors/freelancer_massages/main.py

  search_task_consumer:
    <<: *consumer
    command: python3.11 distributors/search_tasks/main.py

  tg_bot:
    <<: *backend
    command: python3.11 bot.py
    ports:
      - "8001:8001"

  backup:
    build:
      context: ./backup
      args:
        - POSTGRES_VERSION=16
    restart: always
    environment:
      SCHEDULE: '@hourly'
      BACKUP_KEEP_DAYS: 14
      S3_ENDPOINT: https://storage.clo.ru/
      S3_REGION: eu-north-1
      S3_ACCESS_KEY_ID: ${S3_BACKUPS_ACCESSKEY}
      S3_SECRET_ACCESS_KEY: ${S3_BACKUPS_SECRETKEY}
      S3_BUCKET: apps3tablecrm-default-bucket
      S3_PREFIX: backups/dtaskbot
      POSTGRES_HOST: db
      POSTGRES_DATABASE: bot
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      BACKUP_ALERT_PROJECT_NAME: ${BACKUP_ALERT_PROJECT_NAME}
      BACKUP_ALERT_BOT_TOKEN: ${BACKUP_ALERT_BOT_TOKEN}
      BACKUP_ALERT_CHAT_ID: ${BACKUP_ALERT_CHAT_ID}
      PGDUMP_EXTRA_OPTS: '--exclude-table-data=events'

  webapp:
    build: ./WebApp
    restart: always
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_BOT_USERNAME=${VITE_BOT_USERNAME}
    depends_on:
      - backend

volumes:
  pgdata:
  